// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider = "mongodb"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model User {
    id         String      @id @default(auto()) @map("_id") @db.ObjectId
    name       String
    isAdmin    Boolean     @default(false)
    Annotation Annotation?
    Room       Room?
}

model Movie {
    id                   String      @id @default(auto()) @map("_id") @db.ObjectId
    name                 String
    url                  String
    numFrames            Int
    characters           String[]
    isPartiallyAnnotated Boolean
    isFullyAnnotated     Boolean
    Annotation           Annotation?
    Room                 Room?
}

model Annotation {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    movie       Movie   @relation(fields: [movieId], references: [id])
    movieId     String  @unique @db.ObjectId
    annotator   User    @relation(fields: [annotatorId], references: [id])
    annotatorId String  @unique @db.ObjectId
    frameNumber Int
    character   String // There might be a better way to type this!!!
    emotion     Emotion // There might be a better way to type this!!!
    valence     Int // There might be a better way to type this!!!
}

model Room {
    id      String @id @map("_id")
    host    User   @relation(fields: [hostId], references: [id])
    hostId  String @unique @db.ObjectId
    movie   Movie  @relation(fields: [movieId], references: [id])
    movieId String @unique @db.ObjectId
}

enum Emotion {
    HAPPINESS
    SADNESS
    ANGER
    FEAR
    SURPRISE
    DISGUST
}
